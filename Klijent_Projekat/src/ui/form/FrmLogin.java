package ui.form;

import domain.Sudija;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import communication.KomunikacijaSaServerom;
import java.awt.event.ActionListener;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import util.Operacija;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

public class FrmLogin extends javax.swing.JFrame {

    /**
     * Creates new form LoginFrame
     */
    public FrmLogin() {
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        btnOtkazi = new javax.swing.JButton();
        lblErrorLozinka = new javax.swing.JLabel();
        lblErrorKorisnickoIme = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Klijent");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Prijava na sistem"));

        jLabel1.setText("Korisnicko ime:");

        jLabel2.setText("Lozinka:");

        txtUsername.setText("admin");

        btnLogin.setText("Prijavi se");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        txtPassword.setText("admin");

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(366, Short.MAX_VALUE)
                        .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername)
                            .addComponent(txtPassword)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblErrorKorisnickoIme)
                                    .addComponent(lblErrorLozinka))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(lblErrorKorisnickoIme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorLozinka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnOtkazi))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
//        String username = txtUsername.getText();
//        String password = String.valueOf(txtPassword.getPassword());
//        String tipKorisnika = (String) cbmTipKorisnika.getSelectedItem();
//        String[] parametri = {username, password,};
//
//        if (tipKorisnika.equals("Administrator")) {
//            KlijentskiZahtev kz = new KlijentskiZahtev(Operacija.LOGIN_ADMIN, parametri);
//            KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
//            ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
//            Administrator admin = (Administrator) so.getOdgovor();
//
//            if (admin != null) {
//                AdministratorForma af = new AdministratorForma();
//                af.setAdmin(admin);
//                JOptionPane.showMessageDialog(this, "Uspesno ste se prijavili na sistem!", "Uspesno!", JOptionPane.INFORMATION_MESSAGE);
//                this.dispose();
//                af.setVisible(true);
//            } else {
//                JOptionPane.showMessageDialog(this, "Neuspesno prijavljivanje na sistem!", "Neuspesno!", JOptionPane.ERROR_MESSAGE);
//            }
//        } else if (tipKorisnika.equals("Sudija")) {
//            try {
//                //            KlijentskiZahtev kz = new KlijentskiZahtev(Operacija.LOGIN_SUDIJA, parametri);
////            KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
////            ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
//                Sudija sudija = logIn(username, password);
//
//                if (sudija != null) {
//                    SudijaForma sf = new SudijaForma();
//                    sf.setSudija(sudija);
//                    JOptionPane.showMessageDialog(this, "Uspesno ste se prijavili na sistem!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
//                    this.dispose();
//                    sf.setVisible(true);
//                } else {
//                    JOptionPane.showMessageDialog(this, "Neuspesno prijavljivanje na sistem!", "Neuspesno!", JOptionPane.ERROR_MESSAGE);
//
//                }
//            } catch (ClassNotFoundException ex) {
//                Logger.getLogger(FrmLogin.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (Exception ex) {
//                Logger.getLogger(FrmLogin.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }

//        if (user != null && user instanceof Administrator) {
//            AdministratorForma af = new AdministratorForma();
//            af.setAdmin((Administrator) user);
//            JOptionPane.showMessageDialog(this, "Uspesno ste se prijavili na sistem!", "Uspesno!", JOptionPane.INFORMATION_MESSAGE);
//            this.dispose();
//            af.setVisible(true);
//        } else if (user != null && user instanceof Sudija) {
//
//            SudijaForma sf = new SudijaForma();
//            sf.setSudija((Sudija) user);
//            JOptionPane.showMessageDialog(this, "Uspesno ste se prijavili na sistem!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
//            this.dispose();
//            sf.setVisible(true);
////            JOptionPane.showMessageDialog(this, "Neuspesno prijavljivanje na sistem!", "Neuspesno!", JOptionPane.ERROR_MESSAGE);
//
//        if (sudija != null) {
//            SudijaForma sf = new SudijaForma();
//            sf.setSudija(sudija);
//            JOptionPane.showMessageDialog(this, "Uspesno ste se prijavili na sistem!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
//            this.dispose();
//            sf.setVisible(true);
//
//        } else {
//            JOptionPane.showMessageDialog(this, "Neuspesno prijavljivanje na sistem!", "Neuspesno", JOptionPane.INFORMATION_MESSAGE);
//
//        }

    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnOtkaziActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblErrorKorisnickoIme;
    private javax.swing.JLabel lblErrorLozinka;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        setLocationRelativeTo(null);
//        popuniCmbTipKorisnika();

    }

//    private void popuniCmbTipKorisnika() {
//        List<String> listaTipaKorisnika = new ArrayList<>();
//        listaTipaKorisnika.add("Sudija");
//        listaTipaKorisnika.add("Administrator");
//        cbmTipKorisnika.removeAllItems();
//        listaTipaKorisnika.forEach((string) -> {
//            cbmTipKorisnika.addItem(string);
//        });
//    }
    private void validate(JTextField jtxtUsername, JPasswordField jpass) throws Exception {
        lblErrorKorisnickoIme.setText("");
        lblErrorLozinka.setText("");

        if (jtxtUsername.getText().isEmpty()) {
            lblErrorKorisnickoIme.setText("Username is empty!");
            throw new Exception("Username can not be empty");
        }
        if (String.valueOf(jpass.getPassword()).isEmpty()) {
            lblErrorLozinka.setText("Password is empty!");
            throw new Exception("Password can not be empty");
        }
    }

    public Sudija logIn(String user, String password) throws IOException, ClassNotFoundException, Exception {
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacija.LOGIN);

        Map<String, String> mapa = new HashMap<>();
        mapa.put("user", user);
        mapa.put("pass", password);
        kz.setParametar(mapa);

        KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
        ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
        if (so.getException() != null) {
            throw so.getException();
        }
        //GUIKordinator.getInstance().getMap().put("active_user", so.getOdgovor());
        //map.put("active_user",  so.getOdgovor());
        return (Sudija) so.getOdgovor();
    }

    public void addButtonLoginActionListener(ActionListener ae) {
        btnLogin.addActionListener(ae);
    }

    public void addButtonOtkaziActionListener(ActionListener ae) {
        btnOtkazi.addActionListener(ae);
    }

    public javax.swing.JButton getBtnLogin() {
        return btnLogin;
    }

    public void setBtnLogin(javax.swing.JButton btnLogin) {
        this.btnLogin = btnLogin;
    }

    public javax.swing.JButton getBtnOtkazi() {
        return btnOtkazi;
    }

    public void setBtnOtkazi(javax.swing.JButton btnOtkazi) {
        this.btnOtkazi = btnOtkazi;
    }

    public javax.swing.JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(javax.swing.JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public javax.swing.JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(javax.swing.JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public javax.swing.JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(javax.swing.JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public javax.swing.JLabel getLblErrorKorisnickoIme() {
        return lblErrorKorisnickoIme;
    }

    public void setLblErrorKorisnickoIme(javax.swing.JLabel lblErrorKorisnickoIme) {
        this.lblErrorKorisnickoIme = lblErrorKorisnickoIme;
    }

    public javax.swing.JLabel getLblErrorLozinka() {
        return lblErrorLozinka;
    }

    public void setLblErrorLozinka(javax.swing.JLabel lblErrorLozinka) {
        this.lblErrorLozinka = lblErrorLozinka;
    }

    public javax.swing.JPasswordField getTxtPassword() {
        return txtPassword;
    }

    public void setTxtPassword(javax.swing.JPasswordField txtPassword) {
        this.txtPassword = txtPassword;
    }

    public javax.swing.JTextField getTxtUsername() {
        return txtUsername;
    }

    public void setTxtUsername(javax.swing.JTextField txtUsername) {
        this.txtUsername = txtUsername;
    }

}
