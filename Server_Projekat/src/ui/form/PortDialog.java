/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.form;

import java.awt.Color;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nikola
 */
public class PortDialog extends javax.swing.JDialog {

    /**
     * Creates new form PortDialog
     */
    public PortDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        izbrisi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        lblErrorPort = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Port");

        jLabel1.setText("Port:");

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        lblErrorPort.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 151, Short.MAX_VALUE)
                        .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblErrorPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPort))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorPort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOtkazi)
                    .addComponent(btnSacuvaj))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        if (validacija()) {
            try {
                int port = Integer.parseInt(txtPort.getText());
                FileInputStream fis = new FileInputStream("db.properties");
                Properties prop = new Properties();
                prop.load(fis);
                fis.close();

                FileOutputStream out = new FileOutputStream("db.properties");
                prop.setProperty("port", String.valueOf(port));
                prop.store(out, null);
                out.close();
                JOptionPane.showMessageDialog(this, "Sistem je promenio port!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da promeni port!", "Greska", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(PortDialog.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da promeni port!", "Greska", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(PortDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

//        try {
//            int port = Integer.parseInt(txtPort.getText());
//            FileInputStream fis = new FileInputStream("db.properties");
//            Properties prop = new Properties();
//            prop.load(fis);
//
//            prop.setProperty("port", String.valueOf(port));
//            System.out.println("Stavio sam port !" + port);
//            String vrednost = prop.getProperty("port");
//            System.out.println(vrednost);
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(PortDialog.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(PortDialog.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblErrorPort;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables

    private boolean validacija() {
        boolean pom = true;
        izbrisi();
        if (txtPort.getText().isEmpty()) {
            lblErrorPort.setText("Unesite port!");
            pom = false;

        }
        if (!txtPort.getText().isEmpty()) {
            try {
                int port = Integer.valueOf(txtPort.getText());

            } catch (NumberFormatException e) {
                lblErrorPort.setText("Pogresan unos");
                pom = false;
            }

        }

        return pom;
    }

    private void izbrisi() {
        lblErrorPort.setText("");
        lblErrorPort.setForeground(Color.red);
    }
}
